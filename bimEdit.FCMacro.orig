#!/usr/bin/env python3 
# -*- coding: utf-8 -*-

## Explain this...

import FreeCAD, FreeCADGui

selection = FreeCADGui.Selection.getSelection()

def getTransparent(ob):
    if 'OriginalLineWidth' not in ob.PropertiesList:
        ob.addProperty('App::PropertyFloat', 'OriginalLineWidth')
    if 'OriginalTransparency' not in ob.PropertiesList:
        ob.addProperty('App::PropertyInteger', 'OriginalTransparency')
    ob.OriginalTransparency = FreeCADGui.ActiveDocument.getObject(ob.Name
            ).Transparency
    ob.OriginalLineWidth = FreeCADGui.ActiveDocument.getObject(ob.Name
            ).LineWidth
    FreeCADGui.ActiveDocument.getObject(ob.Name).Transparency = 80
    FreeCADGui.ActiveDocument.getObject(ob.Name).LineWidth = 1.00

def getVisible(ob):
    if 'OriginalLineWidth' not in ob.PropertiesList:
        ob.addProperty('App::PropertyFloat', 'OriginalLineWidth')
    if 'OriginalVisibility' not in ob.PropertiesList:
        ob.addProperty('App::PropertyBool', 'OriginalVisibility')
    ob.OriginalVisibility = FreeCADGui.ActiveDocument.getObject(ob.Name
            ).Visibility
    ob.OriginalLineWidth = FreeCADGui.ActiveDocument.getObject(ob.Name
            ).LineWidth
    FreeCADGui.ActiveDocument.getObject(ob.Name).Visibility = True
    FreeCADGui.ActiveDocument.getObject(ob.Name).LineWidth = 4.00

def selectBase(ob):
    print('selecting', ob.Name)
    if 'Additions' in ob.PropertiesList and len(ob.Additions) > 0:
        for o in ob.Additions:
            selectBase(o)
        sel_ob = ob.Base if ob.Base != None else ob
        FreeCADGui.Selection.removeSelection(ob)
        getTransparent(ob)
        FreeCADGui.Selection.addSelection(sel_ob)
        getVisible(sel_ob)
    else:
        if 'Base' in ob.PropertiesList and ob.Base != None:
            FreeCADGui.Selection.addSelection(ob.Base)
            getVisible(ob.Base)
            FreeCADGui.Selection.removeSelection(ob)
            getTransparent(ob)

def restoreOriginals():
    for obj in App.ActiveDocument.Objects:
        print(obj.Name)
        objGui = App.Gui.ActiveDocument.getObject(obj.Name)
        if 'OriginalLineWidth' in obj.PropertiesList:
            objGui.LineWidth = obj.OriginalLineWidth
        if 'OriginalTransparency' in obj.PropertiesList:
            objGui.Transparency = obj.OriginalTransparency
        if 'OriginalVisibility' in obj.PropertiesList:
            objGui.Visibility = obj.OriginalVisibility


if len(selection) > 0:
    for ob in selection:
        selectBase(ob)
else:
    ## If none is selected restore previous value for visibility data
    restoreOriginals()

## TODO use a shift+click to select bases of clicked object
## v=Gui.activeDocument().activeView()
## # This class logs any mouse button events.
## # As the registered callback function fires twice for 'down' and
## # 'up' events we need a boolean flag to handle this.
## class ViewObserver:
##    def logPosition(self, info):
##        print(info)
##        down = (info["State"] == "DOWN")
##        pos = info["Position"]
##        if (down):
##            FreeCAD.Console.PrintMessage(
##                    "Clicked on position: ("+str(pos[0])+", "+str(pos[1])+")\n")
##        
## o = ViewObserver()
## c = v.addEventCallback("SoMouseButtonEvent",o.logPosition)
